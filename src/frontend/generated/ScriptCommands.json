{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "CalculateSignalValue": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "formula": {
                    "description": "A formula to calculate the new signal value, can contain other signals in angle brackets: {}\nExample: {adapter.0.level} * 100 + 30",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget"
                },
                "targetSignal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "type": {
                    "const": "CalculateSignalValue",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "targetSignal",
                "formula",
                "target",
                "additionalData"
            ],
            "type": "object"
        },
        "ClearBitInSignal": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "bitNumber": {
                    "type": "number"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget",
                    "default": 0
                },
                "type": {
                    "const": "ClearBitInSignal",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "target",
                "bitNumber",
                "additionalData"
            ],
            "type": "object"
        },
        "ClearSignalsInGroup": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "group": {
                    "description": "Name of the Group",
                    "type": "string"
                },
                "type": {
                    "const": "ClearSignalsInGroup",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "group",
                "additionalData"
            ],
            "type": "object"
        },
        "CloseDialog": {
            "properties": {
                "additionalData": {
                    "description": "A dialogId. If empty the parent dialog will be closed",
                    "format": "signal",
                    "type": "string"
                },
                "type": {
                    "const": "CloseDialog",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "additionalData"
            ],
            "type": "object"
        },
        "Comment": {
            "properties": {
                "comment": {
                    "type": "string"
                },
                "type": {
                    "const": "Comment",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "comment"
            ],
            "type": "object"
        },
        "Condition": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "comparisonType": {
                    "enum": [
                        "!=",
                        "!=null",
                        "<",
                        "<=",
                        "==",
                        "==false",
                        "==null",
                        "==true",
                        ">",
                        ">="
                    ],
                    "type": "string"
                },
                "falseGotoLabel": {
                    "type": "string"
                },
                "falseScriptName": {
                    "type": "string"
                },
                "falseScriptType": {
                    "type": "string"
                },
                "trueGotoLabel": {
                    "description": "Name of the label to jumpe to when condition is true",
                    "type": "string"
                },
                "trueScriptName": {
                    "type": "string"
                },
                "trueScriptType": {
                    "type": "string"
                },
                "type": {
                    "const": "Condition",
                    "type": "string"
                },
                "value1": {
                    "description": "Name of the value1",
                    "format": "complex"
                },
                "value2": {}
            },
            "propertyOrder": [
                "type",
                "value1",
                "value2",
                "comparisonType",
                "trueGotoLabel",
                "trueScriptName",
                "trueScriptType",
                "falseGotoLabel",
                "falseScriptName",
                "falseScriptType",
                "additionalData"
            ],
            "type": "object"
        },
        "Console": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "message": {
                    "description": "console message",
                    "type": "string"
                },
                "target": {
                    "default": "log",
                    "description": "target where to log",
                    "enum": [
                        "debug",
                        "error",
                        "info",
                        "log",
                        "warn"
                    ],
                    "type": "string"
                },
                "type": {
                    "const": "Console",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "target",
                "message",
                "additionalData"
            ],
            "type": "object"
        },
        "CopySignalValuesFromFolder": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "destinationFolder": {
                    "description": "name of destination folder",
                    "type": "string"
                },
                "sourceFolder": {
                    "description": "name of the source folder",
                    "type": "string"
                },
                "type": {
                    "const": "CopySignalValuesFromFolder",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "sourceFolder",
                "destinationFolder",
                "additionalData"
            ],
            "type": "object"
        },
        "DecrementSignalValue": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget"
                },
                "type": {
                    "const": "DecrementSignalValue",
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "value",
                "target",
                "additionalData"
            ],
            "type": "object"
        },
        "Delay": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "type": {
                    "const": "Delay",
                    "type": "string"
                },
                "value": {
                    "default": 500,
                    "description": "miliseconds to delay",
                    "type": "number"
                }
            },
            "propertyOrder": [
                "type",
                "value",
                "additionalData"
            ],
            "type": "object"
        },
        "Exit": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "type": {
                    "const": "Exit",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "additionalData"
            ],
            "type": "object"
        },
        "ExportSignalValuesAsJson": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "fileName": {
                    "description": "download filename",
                    "type": "string"
                },
                "regex": {
                    "description": "regex to select the signals (every matching one)",
                    "type": "string"
                },
                "type": {
                    "const": "ExportSignalValuesAsJson",
                    "type": "string"
                },
                "waitForUpdatedValues": {
                    "description": "wait for updated values from the connection",
                    "type": "boolean"
                }
            },
            "propertyOrder": [
                "type",
                "regex",
                "waitForUpdatedValues",
                "fileName",
                "additionalData"
            ],
            "type": "object"
        },
        "Goto": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "const": "Goto",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "label",
                "additionalData"
            ],
            "type": "object"
        },
        "ImportSignalValuesFromJson": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "data": {
                    "description": "json data with the values",
                    "type": "string"
                },
                "type": {
                    "const": "ImportSignalValuesFromJson",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "data",
                "additionalData"
            ],
            "type": "object"
        },
        "IncrementSignalValue": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget"
                },
                "type": {
                    "const": "IncrementSignalValue",
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "value",
                "target",
                "additionalData"
            ],
            "type": "object"
        },
        "Javascript": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "script": {
                    "description": "Usable objects in Script:\ncontext : {event : Event, element: Element, shadowRoot: ShadowRoot, instance: Element }",
                    "format": "script",
                    "type": "string"
                },
                "type": {
                    "const": "Javascript",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "script",
                "additionalData"
            ],
            "type": "object"
        },
        "Label": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "const": "Label",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "label",
                "additionalData"
            ],
            "type": "object"
        },
        "Login": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "type": {
                    "const": "Login",
                    "type": "string"
                },
                "username": {
                    "const": "string",
                    "description": "username",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "username",
                "password",
                "additionalData"
            ],
            "type": "object"
        },
        "Logout": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "type": {
                    "const": "Logout",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "additionalData"
            ],
            "type": "object"
        },
        "OpenDialog": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "closeable": {
                    "type": "boolean"
                },
                "cssClass": {
                    "description": "css class to apply to dialog",
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "left": {
                    "type": "string"
                },
                "moveable": {
                    "type": "boolean"
                },
                "relativeSignalsPath": {
                    "description": "If signals in screen are defined relative (starting with a '.'), this will be prepended",
                    "type": "string"
                },
                "screen": {
                    "description": "Name of the Screen",
                    "format": "screen",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "top": {
                    "type": "string"
                },
                "type": {
                    "const": "OpenDialog",
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            },
            "propertyOrder": [
                "cssClass",
                "type",
                "screen",
                "title",
                "relativeSignalsPath",
                "moveable",
                "closeable",
                "width",
                "height",
                "left",
                "top",
                "additionalData"
            ],
            "type": "object"
        },
        "OpenScreen": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "noHistory": {
                    "type": "boolean"
                },
                "relativeSignalsPath": {
                    "description": "If signals in screen are defined relative (starting with a '.'), this will be prepended",
                    "type": "string"
                },
                "screen": {
                    "description": "Name of the Screen",
                    "format": "screen",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "const": "OpenScreen",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "title",
                "screen",
                "type",
                "relativeSignalsPath",
                "noHistory",
                "additionalData"
            ],
            "type": "object"
        },
        "OpenScreenInScreenViewer": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "relativeSignalsPath": {
                    "description": "If signals in screen are defined relative (starting with a '.'), this will be prepended",
                    "type": "string"
                },
                "screen": {
                    "description": "Name of the Screen",
                    "format": "screen",
                    "type": "string"
                },
                "targetSelector": {
                    "default": "iobroker-webui-screen-viewer",
                    "description": "css selector to find the screenviewer in the root screen",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "const": "OpenScreenInScreenViewer",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "screen",
                "title",
                "relativeSignalsPath",
                "targetSelector",
                "additionalData"
            ],
            "type": "object"
        },
        "OpenUrl": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "openInDialog": {
                    "type": "boolean"
                },
                "target": {
                    "description": "defaults to '_blank'",
                    "type": "string"
                },
                "type": {
                    "const": "OpenUrl",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "url",
                "target",
                "openInDialog",
                "additionalData"
            ],
            "type": "object"
        },
        "RunScript": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "name": {
                    "const": "string",
                    "description": "Name of the Script",
                    "type": "string"
                },
                "scriptType": {
                    "const": "string",
                    "description": "Type of the Script",
                    "type": "string"
                },
                "type": {
                    "const": "RunScript",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "name",
                "scriptType",
                "additionalData"
            ],
            "type": "object"
        },
        "SetBitInSignal": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "bitNumber": {
                    "type": "number"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget",
                    "default": 0
                },
                "type": {
                    "const": "SetBitInSignal",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "target",
                "bitNumber",
                "additionalData"
            ],
            "type": "object"
        },
        "SetElementProperty": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "mode": {
                    "default": "toggle",
                    "description": "only for target: class",
                    "enum": [
                        "add",
                        "remove",
                        "toggle"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "name of property/attribute or css value you want to set",
                    "type": "string"
                },
                "parentIndex": {
                    "default": 0,
                    "description": "wich parent, 0 = current, 1 = first parent, 2 = ...\nof the targetSelectorTarget",
                    "type": "number"
                },
                "target": {
                    "default": "property",
                    "description": "what of the elements do you want to set",
                    "enum": [
                        "attribute",
                        "class",
                        "css",
                        "property"
                    ],
                    "type": "string"
                },
                "targetSelector": {
                    "description": "css selector to find elements on targetSelectorTarget, if empty the targetSelectorTarget directly is used",
                    "type": "string"
                },
                "targetSelectorTarget": {
                    "default": "container",
                    "description": "where to search for the elements (used as a start)\nelement = currentElement\ncontainer = screen or customControl",
                    "enum": [
                        "container",
                        "element"
                    ],
                    "type": "string"
                },
                "type": {
                    "const": "SetElementProperty",
                    "type": "string"
                },
                "value": {
                    "description": "value you want to set"
                }
            },
            "propertyOrder": [
                "type",
                "target",
                "targetSelectorTarget",
                "parentIndex",
                "targetSelector",
                "name",
                "mode",
                "value",
                "additionalData"
            ],
            "type": "object"
        },
        "SetSignalValue": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget"
                },
                "type": {
                    "const": "SetSignalValue",
                    "type": "string"
                },
                "value": {}
            },
            "propertyOrder": [
                "type",
                "signal",
                "target",
                "value",
                "additionalData"
            ],
            "type": "object"
        },
        "ShowMessageBox": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "buttons": {
                    "default": "ok",
                    "description": "message text",
                    "enum": [
                        "abortRetryIgnore",
                        "cancelTryContinue",
                        "ok",
                        "okCancel",
                        "retryCancel",
                        "yesNo",
                        "yesNoCancel"
                    ],
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "message": {
                    "description": "message text",
                    "type": "string"
                },
                "messageType": {
                    "default": "info",
                    "description": "message type",
                    "enum": [
                        "error",
                        "info",
                        "warning"
                    ],
                    "type": "string"
                },
                "resultSignal": {
                    "description": "number of the clicked button, starting with 1",
                    "format": "signal",
                    "type": "string"
                },
                "title": {
                    "description": "title text",
                    "type": "string"
                },
                "type": {
                    "const": "ShowMessageBox",
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "title",
                "message",
                "messageType",
                "buttons",
                "resultSignal",
                "width",
                "height",
                "additionalData"
            ],
            "type": "object"
        },
        "SubscribeSignal": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "oneTime": {
                    "type": "boolean"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "type": {
                    "const": "SubscribeSignal",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "oneTime",
                "additionalData"
            ],
            "type": "object"
        },
        "SwitchLanguage": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "type": {
                    "const": "SwitchLanguage",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "language",
                "additionalData"
            ],
            "type": "object"
        },
        "ToggleBitInSignal": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "bitNumber": {
                    "type": "number"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget",
                    "default": 0
                },
                "type": {
                    "const": "ToggleBitInSignal",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "target",
                "bitNumber",
                "additionalData"
            ],
            "type": "object"
        },
        "ToggleSignalValue": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/signalTarget"
                },
                "type": {
                    "const": "ToggleSignalValue",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "target",
                "additionalData"
            ],
            "type": "object"
        },
        "UnsubscribeSignal": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "signal": {
                    "description": "Name of the signal",
                    "format": "signal",
                    "type": "string"
                },
                "type": {
                    "const": "UnsubscribeSignal",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "signal",
                "additionalData"
            ],
            "type": "object"
        },
        "WebuiScriptCommands": {
            "anyOf": [
                {
                    "$ref": "#/definitions/OpenUrl"
                },
                {
                    "$ref": "#/definitions/CloseDialog"
                },
                {
                    "$ref": "#/definitions/ToggleSignalValue"
                },
                {
                    "$ref": "#/definitions/SetSignalValue"
                },
                {
                    "$ref": "#/definitions/IncrementSignalValue"
                },
                {
                    "$ref": "#/definitions/DecrementSignalValue"
                },
                {
                    "$ref": "#/definitions/SetBitInSignal"
                },
                {
                    "$ref": "#/definitions/ClearBitInSignal"
                },
                {
                    "$ref": "#/definitions/ToggleBitInSignal"
                },
                {
                    "$ref": "#/definitions/Console"
                },
                {
                    "$ref": "#/definitions/CalculateSignalValue"
                },
                {
                    "$ref": "#/definitions/Javascript"
                },
                {
                    "$ref": "#/definitions/SetElementProperty"
                },
                {
                    "$ref": "#/definitions/Delay"
                },
                {
                    "$ref": "#/definitions/SwitchLanguage"
                },
                {
                    "$ref": "#/definitions/Login"
                },
                {
                    "$ref": "#/definitions/Logout"
                },
                {
                    "$ref": "#/definitions/SubscribeSignal"
                },
                {
                    "$ref": "#/definitions/UnsubscribeSignal"
                },
                {
                    "$ref": "#/definitions/WriteSignalsInGroup"
                },
                {
                    "$ref": "#/definitions/ClearSignalsInGroup"
                },
                {
                    "$ref": "#/definitions/RunScript"
                },
                {
                    "$ref": "#/definitions/CopySignalValuesFromFolder"
                },
                {
                    "$ref": "#/definitions/ShowMessageBox"
                },
                {
                    "$ref": "#/definitions/ExportSignalValuesAsJson"
                },
                {
                    "$ref": "#/definitions/ImportSignalValuesFromJson"
                },
                {
                    "$ref": "#/definitions/Comment"
                },
                {
                    "$ref": "#/definitions/Condition"
                },
                {
                    "$ref": "#/definitions/Exit"
                },
                {
                    "$ref": "#/definitions/Label"
                },
                {
                    "$ref": "#/definitions/Goto"
                },
                {
                    "$ref": "#/definitions/OpenScreen"
                },
                {
                    "$ref": "#/definitions/OpenDialog"
                },
                {
                    "$ref": "#/definitions/OpenScreenInScreenViewer"
                }
            ]
        },
        "WriteSignalsInGroup": {
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "group": {
                    "description": "Name of the Group",
                    "type": "string"
                },
                "type": {
                    "const": "WriteSignalsInGroup",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "type",
                "group",
                "additionalData"
            ],
            "type": "object"
        },
        "signalTarget": {
            "description": "signal - a signal (the default)\nproperty - a property defined in the current screen/control\nelementProperty - a property defined on the elment raising the event\nrootProperty - a property defined on the root element",
            "enum": [
                "elementProperty",
                "property",
                "rootProperty",
                "signal"
            ],
            "type": "string"
        }
    }
}

