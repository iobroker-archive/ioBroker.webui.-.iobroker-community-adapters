let selectDialog = null;
let storedRes = null;
/**
 * 
 * @param {{host:string, port: number, protocol: string, language: string, selected?: string, allowAll?: boolean}} config 
 * @returns {Promise<string?>}
 */
export async function openSelectIdDialog(config, oldId) {
    return new Promise(async res => {
        storedRes = res;
        if (!selectDialog) {
            await import('./iobrokerSelectId.es.js');
            selectDialog = document.createElement('iobroker-select-id');
            //@ts-ignore
            window._iobSelectIdDialogOnSelected = (newId, newObj, oldId, oldObj) => {
                storedRes(newId);
                selectDialog.setAttribute('open', 'false');
            };
            selectDialog.setAttribute('id', 'iob-select-id');
            //@ts-ignore
            selectDialog.setAttribute('port', config.port);
            selectDialog.setAttribute('host', config.host);
            selectDialog.setAttribute('protocol', config.protocol);
            selectDialog.setAttribute('language', config.language);
            selectDialog.setAttribute('onclose', '_iobSelectIdDialogOnSelected');
            selectDialog.setAttribute('all', config.allowAll ? 'true' : 'false');
            selectDialog.setAttribute('selected', config.selected);
            selectDialog.setAttribute('open', 'true');
            document.body.appendChild(selectDialog);
        } else {
            selectDialog.setAttribute('open', 'true');
        }
    });
}